/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Query.java
 *
 * Created on Mar 26, 2011, 11:57:06 PM
 */

package OurPackage;

/**
 *
 * @author sherif
 */
import OurPackage.TwitterClass;
import java.awt.Color;
import javax.swing.*;
//import maintweet.JavaAccess;
//import maintweet.ManageCat;
//import maintweet.Map;

public class Query extends javax.swing.JPanel {

    /** Creates new form Query */
    public Query() {
        initComponents();
        //setLookAndFeel();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
      //Functions-------------------------/////////////////////////////////////////////////////////////
    public void moveTweets()
    {
        
        if(!(TweetsList.isSelectionEmpty()))
        {
            Map MapObject = new Map(null,true);
            ManageCat.sendItem();
            MapObject.SelectedTweetText.setText((String)TweetsList.getSelectedValue());
            MapObject.setLocationRelativeTo(null);
            MapObject.setVisible(true);
 
            if(ok == true)
            {
               saveTweets(MapObject.ComboSelection());
               
               ok = false;
            }
        }
 else
        {
            Check_List();
        }

    }

    public void saveTweets(String CatComboSelection)
    {
         JOptionPane.showMessageDialog(null,"It May take a few seconds","Please Wait !!",JOptionPane.INFORMATION_MESSAGE);
        int FollowerID = -1;
        //insert in Author tabel and get the author number 
        int AuthorID = AccessObj.insertInAuthor((String)TwitterObj.getFromUser().elementAt(TweetsList.getSelectedIndex()),(String) TwitterObj.getProfImageUrl().elementAt(TweetsList.getSelectedIndex()));
        TwitterObj.Followers((String)TwitterObj.getFromUser().elementAt(TweetsList.getSelectedIndex()));

        String FieldsArray[] = new String[5];
try{            FieldsArray[0] = (String)TwitterObj.getTweets().elementAt(TweetsList.getSelectedIndex());
                FieldsArray[1] = ""+AuthorID;
                FieldsArray[2] = (String) TwitterObj.getDate().elementAt(TweetsList.getSelectedIndex()).toString();
                FieldsArray[3] = (String) TwitterObj.getLanguage().elementAt(TweetsList.getSelectedIndex());
                FieldsArray[4] = (String) SearchTextField.getText();
}
catch(Exception e){}
                if(AccessObj.insertInTweets(FieldsArray,AccessObj.getCatID(CatComboSelection)))
                {
                    
                    SavedTweetsModel.addElement(FieldsArray[0]);
                    SavedFromUserModel.addElement((String)TwitterObj.getFromUser().elementAt(TweetsList.getSelectedIndex()));
                    SavedDateModel.addElement(FieldsArray[2]);
                    SavedProfImageURLModel.addElement(FieldsArray[3]);
                    

                    for(int i = 0; i < TwitterObj.getUserFollowers().size(); i++)
                    {
                        
                        
                        //insert in Follower tabel and get the Follower number 
                      
                        
                         
                        FollowerID = AccessObj.insertInFollowers((String)TwitterObj.getUserFollowers().elementAt(i),(String)TwitterObj.getUserStatus().elementAt(i));
                        //ProgressBar.setValue(i+1);
                        if(FollowerID != -1)
                            AccessObj.insertInFollowedBy(AuthorID,FollowerID);
                    }
                    JOptionPane.showMessageDialog(null,"Done !","",JOptionPane.INFORMATION_MESSAGE);
                }
               
                
                


    }
    
    public void clearLists()
    {
        FromUserModel.clear();
            TweetsModel.clear();
            DateModel.clear();
            ProfImageURLModel.clear();
    }
    public void searchTweets(String Input)
    {
        TwitterObj.SearchTweets(Input);
        //IsTrend = false;
        //IsTrend = AccessObj.isTrend(Input);
    }

    public void showTweets()
    {
        //if(IsTrend)
            //TweetsList.setForeground(Color.red);
        //else
            //TweetsList.setForeground(Color.BLACK);
        
        clearLists();
        for(int i = 0; i < TwitterObj.getFromUser().size(); i++)
        {

            FromUserModel.add(i,TwitterObj.getFromUser().elementAt(i));
            TweetsModel.add(i,TwitterObj.getTweets().elementAt(i));
            DateModel.add(i,TwitterObj.getDate().elementAt(i));
            ProfImageURLModel.add(i,TwitterObj.getProfImageUrl().elementAt(i));
            
        }
    }

    public void maping(String CatName)
    {
        Map MapObj = new Map(null,true);
        int TrendID = 0;
        int TweetID = AccessObj.getLast();
        if(IsTrend)
        {
            TrendID = AccessObj.getTrendID(SearchTextField.getText());
            AccessObj.insertInIsTrend(TweetID,TrendID);
        }
    }
   

    public void setLookAndFeel()
    {
        try {
		UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InstantiationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }

     public Boolean Check_text(String s)
    {

        if(s.isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Search Field Should not be Empty","Try Again",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    public void Check_List()
    {


            JOptionPane.showMessageDialog(null,"The list is empty or you didn't select an item!!","Try Again",JOptionPane.ERROR_MESSAGE);

    }

    //-------------------------/////////////////////////////////////////////////////////////


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchButton = new javax.swing.JButton();
        SearchTextField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        MainPanel = new javax.swing.JTabbedPane();
        TweetsPanel = new javax.swing.JPanel();
        TweetsLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TweetsList = new javax.swing.JList();
        FromUserLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        FromUserList = new javax.swing.JList();
        jScrollPane7 = new javax.swing.JScrollPane();
        DateList = new javax.swing.JList();
        DateLabel = new javax.swing.JLabel();
        ProfImageUrlLabel1 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ProfImageUrlList = new javax.swing.JList();
        SavedTweetsPanel = new javax.swing.JPanel();
        SavedTweetsTweetsLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        SavedTweetsList = new javax.swing.JList();
        SFromUserLabel = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        SFromUserList = new javax.swing.JList();
        SDateLabel = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        SDateList = new javax.swing.JList();
        SProfImageUrlLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        SProfImageUrlList = new javax.swing.JList();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(Query.class);
        setBackground(resourceMap.getColor("Query.background")); // NOI18N
        setName("Query"); // NOI18N

        SearchButton.setText(resourceMap.getString("SearchButton.text")); // NOI18N
        SearchButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SearchButton.setName("SearchButton"); // NOI18N
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchTextField.setBackground(resourceMap.getColor("SearchTextField.background")); // NOI18N
        SearchTextField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("SearchTextField.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), resourceMap.getColor("SearchTextField.border.titleColor"))); // NOI18N
        SearchTextField.setName("SearchTextField"); // NOI18N

        SaveButton.setText(resourceMap.getString("SaveButton.text")); // NOI18N
        SaveButton.setName("SaveButton"); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        MainPanel.setBackground(resourceMap.getColor("MainPanel.background")); // NOI18N
        MainPanel.setName("MainPanel"); // NOI18N

        TweetsPanel.setBackground(resourceMap.getColor("TweetsPanel.background")); // NOI18N
        TweetsPanel.setName("TweetsPanel"); // NOI18N

        TweetsLabel.setText(resourceMap.getString("TweetsLabel.text")); // NOI18N
        TweetsLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TweetsLabel.setName("TweetsLabel"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        TweetsList.setModel(TweetsModel);
        TweetsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TweetsList.setName("TweetsList"); // NOI18N
        TweetsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TweetsListMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(TweetsList);

        FromUserLabel.setText(resourceMap.getString("FromUserLabel.text")); // NOI18N
        FromUserLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        FromUserLabel.setName("FromUserLabel"); // NOI18N

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        FromUserList.setModel(FromUserModel);
        FromUserList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        FromUserList.setName("FromUserList"); // NOI18N
        FromUserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FromUserListMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(FromUserList);

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        DateList.setModel(DateModel);
        DateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        DateList.setName("DateList"); // NOI18N
        DateList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DateListMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(DateList);

        DateLabel.setText(resourceMap.getString("DateLabel.text")); // NOI18N
        DateLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DateLabel.setName("DateLabel"); // NOI18N

        ProfImageUrlLabel1.setText(resourceMap.getString("ProfImageUrlLabel1.text")); // NOI18N
        ProfImageUrlLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ProfImageUrlLabel1.setName("ProfImageUrlLabel1"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        ProfImageUrlList.setModel(ProfImageURLModel);
        ProfImageUrlList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProfImageUrlList.setName("ProfImageUrlList"); // NOI18N
        ProfImageUrlList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProfImageUrlListMousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(ProfImageUrlList);

        javax.swing.GroupLayout TweetsPanelLayout = new javax.swing.GroupLayout(TweetsPanel);
        TweetsPanel.setLayout(TweetsPanelLayout);
        TweetsPanelLayout.setHorizontalGroup(
            TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TweetsPanelLayout.createSequentialGroup()
                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addComponent(TweetsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, 0, 187, Short.MAX_VALUE)
                    .addComponent(FromUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, 0, 187, Short.MAX_VALUE)
                    .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(ProfImageUrlLabel1))
                .addGap(72, 72, 72))
        );

        TweetsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DateLabel, FromUserLabel, ProfImageUrlLabel1, jScrollPane8});

        TweetsPanelLayout.setVerticalGroup(
            TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TweetsPanelLayout.createSequentialGroup()
                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TweetsPanelLayout.createSequentialGroup()
                        .addComponent(TweetsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TweetsPanelLayout.createSequentialGroup()
                        .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(TweetsPanelLayout.createSequentialGroup()
                                .addComponent(ProfImageUrlLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TweetsPanelLayout.createSequentialGroup()
                                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FromUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, 0)
                                .addGroup(TweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(27, 27, 27)))
                .addGap(20, 20, 20))
        );

        TweetsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane5, jScrollPane6, jScrollPane7, jScrollPane8});

        MainPanel.addTab(resourceMap.getString("TweetsPanel.TabConstraints.tabTitle"), TweetsPanel); // NOI18N

        SavedTweetsPanel.setBackground(resourceMap.getColor("SavedTweetsPanel.background")); // NOI18N
        SavedTweetsPanel.setName("SavedTweetsPanel"); // NOI18N

        SavedTweetsTweetsLabel.setText(resourceMap.getString("SavedTweetsTweetsLabel.text")); // NOI18N
        SavedTweetsTweetsLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SavedTweetsTweetsLabel.setName("SavedTweetsTweetsLabel"); // NOI18N

        jScrollPane9.setName("jScrollPane9"); // NOI18N

        SavedTweetsList.setModel(SavedTweetsModel);
        SavedTweetsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SavedTweetsList.setName("SavedTweetsList"); // NOI18N
        SavedTweetsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SavedTweetsListMousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(SavedTweetsList);

        SFromUserLabel.setText(resourceMap.getString("SFromUserLabel.text")); // NOI18N
        SFromUserLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SFromUserLabel.setName("SFromUserLabel"); // NOI18N

        jScrollPane12.setName("jScrollPane12"); // NOI18N

        SFromUserList.setModel(SavedFromUserModel);
        SFromUserList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SFromUserList.setName("SFromUserList"); // NOI18N
        SFromUserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SFromUserListMousePressed(evt);
            }
        });
        jScrollPane12.setViewportView(SFromUserList);

        SDateLabel.setText(resourceMap.getString("SDateLabel.text")); // NOI18N
        SDateLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SDateLabel.setName("SDateLabel"); // NOI18N

        jScrollPane10.setName("jScrollPane10"); // NOI18N

        SDateList.setModel(SavedDateModel);
        SDateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SDateList.setName("SDateList"); // NOI18N
        SDateList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SDateListMousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(SDateList);

        SProfImageUrlLabel.setText(resourceMap.getString("SProfImageUrlLabel.text")); // NOI18N
        SProfImageUrlLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SProfImageUrlLabel.setName("SProfImageUrlLabel"); // NOI18N

        jScrollPane11.setName("jScrollPane11"); // NOI18N

        SProfImageUrlList.setModel(SavedProfImageURLModel);
        SProfImageUrlList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SProfImageUrlList.setName("SProfImageUrlList"); // NOI18N
        SProfImageUrlList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SProfImageUrlListMousePressed(evt);
            }
        });
        jScrollPane11.setViewportView(SProfImageUrlList);

        javax.swing.GroupLayout SavedTweetsPanelLayout = new javax.swing.GroupLayout(SavedTweetsPanel);
        SavedTweetsPanel.setLayout(SavedTweetsPanelLayout);
        SavedTweetsPanelLayout.setHorizontalGroup(
            SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavedTweetsPanelLayout.createSequentialGroup()
                .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SavedTweetsPanelLayout.createSequentialGroup()
                        .addComponent(SavedTweetsTweetsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                        .addGap(0, 0, 0))
                    .addGroup(SavedTweetsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                        .addGap(0, 0, 0)))
                .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SFromUserLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SDateLabel)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(SProfImageUrlLabel))
                .addGap(72, 72, 72))
        );

        SavedTweetsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {SDateLabel, SFromUserLabel, SProfImageUrlLabel, jScrollPane10, jScrollPane11, jScrollPane12});

        SavedTweetsPanelLayout.setVerticalGroup(
            SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavedTweetsPanelLayout.createSequentialGroup()
                .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SavedTweetsPanelLayout.createSequentialGroup()
                        .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SFromUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SProfImageUrlLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(SavedTweetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane12)
                            .addComponent(jScrollPane11)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SavedTweetsPanelLayout.createSequentialGroup()
                        .addComponent(SavedTweetsTweetsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        SavedTweetsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane10, jScrollPane11, jScrollPane12, jScrollPane9});

        MainPanel.addTab(resourceMap.getString("SavedTweetsPanel.TabConstraints.tabTitle"), SavedTweetsPanel); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 923, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SaveButton)
                        .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(252, 252, 252))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveButton)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
        if(Check_text(SearchTextField.getText()))
         {
            searchTweets(SearchTextField.getText());
            showTweets();
        }

}//GEN-LAST:event_SearchButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        moveTweets();
}//GEN-LAST:event_SaveButtonActionPerformed

    private void TweetsListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TweetsListMousePressed
     FromUserList.setSelectedIndex(TweetsList.getSelectedIndex());
     DateList.setSelectedIndex(TweetsList.getSelectedIndex());
     ProfImageUrlList.setSelectedIndex(TweetsList.getSelectedIndex());
    }//GEN-LAST:event_TweetsListMousePressed

    private void FromUserListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FromUserListMousePressed
      TweetsList.setSelectedIndex(FromUserList.getSelectedIndex());
     DateList.setSelectedIndex(FromUserList.getSelectedIndex());
     ProfImageUrlList.setSelectedIndex(FromUserList.getSelectedIndex());
    }//GEN-LAST:event_FromUserListMousePressed

    private void DateListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DateListMousePressed
      FromUserList.setSelectedIndex(DateList.getSelectedIndex());
     TweetsList.setSelectedIndex(DateList.getSelectedIndex());
     ProfImageUrlList.setSelectedIndex(DateList.getSelectedIndex());
    }//GEN-LAST:event_DateListMousePressed

    private void ProfImageUrlListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfImageUrlListMousePressed
     FromUserList.setSelectedIndex(ProfImageUrlList.getSelectedIndex());
     TweetsList.setSelectedIndex(ProfImageUrlList.getSelectedIndex());
     DateList.setSelectedIndex(ProfImageUrlList.getSelectedIndex());
    }//GEN-LAST:event_ProfImageUrlListMousePressed

    private void SavedTweetsListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SavedTweetsListMousePressed
     SFromUserList.setSelectedIndex(SavedTweetsList.getSelectedIndex());
     SDateList.setSelectedIndex(SavedTweetsList.getSelectedIndex());
     SProfImageUrlList.setSelectedIndex(SavedTweetsList.getSelectedIndex());
    }//GEN-LAST:event_SavedTweetsListMousePressed

    private void SFromUserListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SFromUserListMousePressed
  SavedTweetsList.setSelectedIndex(SFromUserList.getSelectedIndex());
     SDateList.setSelectedIndex(SFromUserList.getSelectedIndex());
     SProfImageUrlList.setSelectedIndex(SFromUserList.getSelectedIndex());
    }//GEN-LAST:event_SFromUserListMousePressed

    private void SDateListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SDateListMousePressed
      SavedTweetsList.setSelectedIndex(SDateList.getSelectedIndex());
     SFromUserList.setSelectedIndex(SDateList.getSelectedIndex());
     SProfImageUrlList.setSelectedIndex(SDateList.getSelectedIndex());
    }//GEN-LAST:event_SDateListMousePressed

    private void SProfImageUrlListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SProfImageUrlListMousePressed
  SavedTweetsList.setSelectedIndex(SProfImageUrlList.getSelectedIndex());
     SFromUserList.setSelectedIndex(SProfImageUrlList.getSelectedIndex());
     SDateList.setSelectedIndex(SProfImageUrlList.getSelectedIndex());
    }//GEN-LAST:event_SProfImageUrlListMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DateLabel;
    private javax.swing.JList DateList;
    private javax.swing.JLabel FromUserLabel;
    private javax.swing.JList FromUserList;
    private javax.swing.JTabbedPane MainPanel;
    private javax.swing.JLabel ProfImageUrlLabel1;
    private javax.swing.JList ProfImageUrlList;
    private javax.swing.JLabel SDateLabel;
    private javax.swing.JList SDateList;
    private javax.swing.JLabel SFromUserLabel;
    private javax.swing.JList SFromUserList;
    private javax.swing.JLabel SProfImageUrlLabel;
    private javax.swing.JList SProfImageUrlList;
    private javax.swing.JButton SaveButton;
    public javax.swing.JList SavedTweetsList;
    private javax.swing.JPanel SavedTweetsPanel;
    private javax.swing.JLabel SavedTweetsTweetsLabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel TweetsLabel;
    private javax.swing.JList TweetsList;
    private javax.swing.JPanel TweetsPanel;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
    public DefaultListModel TweetsModel = new DefaultListModel();
    public DefaultListModel FromUserModel = new DefaultListModel();
    public DefaultListModel DateModel = new DefaultListModel();
    public DefaultListModel ProfImageURLModel = new DefaultListModel();
    public DefaultListModel SavedTweetsModel = new DefaultListModel();
    public DefaultListModel SavedFromUserModel = new DefaultListModel();
    public DefaultListModel SavedDateModel = new DefaultListModel();
    public DefaultListModel SavedProfImageURLModel = new DefaultListModel();
    JavaAccess AccessObj = new JavaAccess();
    
    public static boolean ok = false;
    private boolean IsTrend = false;
    TwitterClass TwitterObj = new TwitterClass();
    
}
